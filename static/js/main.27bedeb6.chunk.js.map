{"version":3,"sources":["components/Contacts/ContactItemStyled.js","components/Contacts/DeleteButtonStyled.js","components/Contacts/ContactItem.js","components/Contacts/ContactList.js","components/Form/ContactFormStyled.js","components/Form/FormButtonStyled.js","components/Form/ContactForm.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["ContactItemStyled","styled","li","DeleteButtonStyled","button","ContactItem","info","name","number","id","onDeleteContact","onClick","ContactList","contactList","map","item","ContactFormStyled","form","FormButtonStyled","ContactForm","state","nameInputId","v4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","htmlFor","type","pattern","title","required","onChange","Component","FilterStyled","div","Filter","filterId","App","contacts","filter","addContact","find","contact","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","length","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27bedeb6.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ContactItemStyled = styled.li`\r\n  font-size: 18px;\r\n  margin-left: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default ContactItemStyled;\r\n","import styled from 'styled-components';\r\n\r\nconst DeleteButtonStyled = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin-left: 20px;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n  font-size: 14px;\r\n  background-color: #dcdcdc;\r\n  border: 1px solid #696969;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #808080;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport default DeleteButtonStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItemStyled from './ContactItemStyled';\r\nimport DeleteButtonStyled from './DeleteButtonStyled';\r\n\r\nconst ContactItem = ({ info: { name, number, id }, onDeleteContact }) => {\r\n  return (\r\n    <ContactItemStyled>\r\n      {name}: {number}\r\n      <DeleteButtonStyled onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </DeleteButtonStyled>\r\n    </ContactItemStyled>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      {contactList.map(item => (\r\n        <ContactItem\r\n          key={item.id}\r\n          info={item}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactFormStyled = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  border: 2px solid #000;\r\n  width: 400px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n\r\n  .label {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .input {\r\n    margin-bottom: 10px;\r\n    width: 250px;\r\n  }\r\n`;\r\n\r\nexport default ContactFormStyled;\r\n","import styled from 'styled-components';\r\n\r\nconst FormButtonStyled = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin-top: 20px;\r\n  padding: 6px 10px;\r\n  width: 250px;\r\n  background-color: #3f51b5;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nexport default FormButtonStyled;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 } from 'uuid';\r\nimport ContactFormStyled from './ContactFormStyled';\r\nimport FormButtonStyled from './FormButtonStyled';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = v4();\r\n  numberInputId = v4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactFormStyled onSubmit={this.handleSubmit}>\r\n        <label className=\"label\" htmlFor={this.nameInputId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={this.nameInputId}\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className=\"label\" htmlFor={this.numberInputId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={this.numberInputId}\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <FormButtonStyled>Add contact</FormButtonStyled>\r\n      </ContactFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nconst FilterStyled = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  .label {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default FilterStyled;\r\n","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport FilterStyled from './FilterStyled';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  const filterId = v4();\r\n  return (\r\n    <FilterStyled>\r\n      <label className=\"label\" htmlFor={filterId}>\r\n        Find contacts by name\r\n      </label>\r\n      <input type=\"text\" value={value} onChange={onChange} id={filterId} />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport ContactList from './Contacts';\nimport ContactForm from './Form';\nimport Filter from './Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts.length !== prevState.contacts.length) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const alreadyExists = contacts.find(contact => contact.name === name);\n    if (alreadyExists) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contactList={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}