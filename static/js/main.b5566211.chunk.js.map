{"version":3,"sources":["components/Contacts/ContactItem.js","components/Contacts/ContactList.js","components/Form/ContactForm.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["ContactItem","info","onDeleteContact","className","name","number","onClick","id","ContactList","contactList","map","item","ContactForm","state","nameInputId","v4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","Filter","filterId","App","contacts","filter","addContact","find","contact","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","length","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5566211.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ContactItem.scss';\r\n\r\nconst ContactItem = ({ info, onDeleteContact }) => {\r\n  return (\r\n    <li className=\"ContactItem\">\r\n      {info.name}: {info.number}\r\n      <button onClick={() => onDeleteContact(info.id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      {contactList.map(item => (\r\n        <ContactItem\r\n          key={item.id}\r\n          info={item}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.scss';\r\nimport { v4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = v4();\r\n  numberInputId = v4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"ContactForm\">\r\n        <label htmlFor={this.nameInputId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={this.nameInputId}\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor={this.numberInputId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={this.numberInputId}\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  const filterId = v4();\r\n  return (\r\n    <div className=\"Filter\">\r\n      <label htmlFor={filterId}>Find contacts by name</label>\r\n      <input type=\"text\" value={value} onChange={onChange} id={filterId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport ContactList from './Contacts';\nimport ContactForm from './Form';\nimport Filter from './Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts.length !== prevState.contacts.length) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const alreadyExists = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n    if (alreadyExists) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contactList={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}